@c install.txinfo Time-stamp: <95/03/15 11:18:28 gildea> -*-texinfo-*-
@c Included by sd_doc, also used to produce INSTALL.
@ifclear full-manual
This file is automatically generated from install.txinfo.  Do not edit.
@end ifclear
@node Installation, Copying, Versions, Top
@chapter Building and Installing

To compile Sd, you need a C compiler that

@itemize @bullet
@item can handle full ANSI C, and
@item has 32-bit @code{int}s.
@end itemize

@code{mkcalls} must be run once to compile @file{sd_calls.txt}, the
calls database, into @file{sd_calls.dat}, the binary file used by Sd.

The program is known to operate on the following configurations:
@display
   SunOS 4.1.3, gcc 2.6.3, X11 Release 6 with public patches 1-11,
      the twm window manager, on Sun 4 (Sparc)
   Domain/OS 10.4, C compiler 6.9, Dialog 2.0, on Apollo M68K
   OSF/1.0.A, C compiler 1.0, X11 Release 4, on HP series 700
   HP-UX 8.07, C compiler 8.71, X11 Release 4, on HP series 700
   HP-UX 9.0, C compiler 9.15, X11 Release 5, on HP series 700
   IRIX 5.0 on SGI Indigo
   Intel 80486, MS-DOS 5.00, DJGPP 1.11, QEMM
@end display

@menu
* Building on Unix::		Building on Unix
* Building on DOS::		Building on DOS with gcc
* Document Formatting::		How to format the documentation
* Manifest::			List of files in the distribution
@end menu

@node  Building on Unix, Building on DOS,  , Installation
@section Building on Unix

To compile and link Sd, you need an ANSI C compiler (@code{gcc} qualifies)
and the Athena Widgets from X11 Release 4 or later.

If your X system was compiled with an ANSI C compiler, you can run
@code{xmkmf}, which will use @file{Imakefile} and your local X configuration
information to generate a @file{Makefile}:

@example
xmkmf
make
@end example

If that doesn't work, typically because
your X system was @emph{not} compiled with an ANSI C compiler, run
@code{./configure}, which will use @file{Makefile.in} to create a
@file{Makefile} by
examining your system and trying to figure out what options to use:

@example
./configure
make
@end example

Using @code{configure} is not as reliable as using @code{xmkmf}
because @code{configure}
has to guess the local preferences, whereas @code{xmkmf} reads a local
configuration file, which is usually, but not always, reliable.

Once you have a @file{Makefile}, type @code{make} to build sd.
If you are not running X, @code{make} will build sdtty, the
character-oriented version of the program.

@code{mkcalls} must be run once to compile @file{sd_calls.txt},
the calls database,
into @file{sd_calls.dat}, the binary file used by Sd.  This step is done
automatically by @code{make}.

Sun's OpenWindows 3.0 has a buggy @code{xmkmf}, so you cannot use it.  Instead,
set the environment variable @code{OPENWINHOME} appropriately
(typically to @file{/usr/openwin}), then type

@c I'm not sure which version of OpenWindows has this bug, but the
@c current one (3.3) does not.  I guessed 3.0, but perhaps
@c someone can check this?

@example
imake -I$OPENWINHOME/lib/config
@end example

IBM's AIX 3.2 has a buggy C optimizer.  If you find that some calls are
missing from the call menus, compile @file{sdinit.c} without optimization.


@node Building on DOS, Document Formatting, Building on Unix, Installation
@section Building on DOS with gcc

@code{sdtty} and @code{mkcalls} run on MS-DOS using the QEMM memory
manager.  @code{sdtty} is about 2Mb.  The file @file{sdui-tpc.c}
provides an interface to the console I/O package distributed with
@code{djgpp}, a port of @code{gcc} to DOS which runs under Desqview
and Desqview/X.

@code{djgpp} is available via anonymous FTP in the directory
@file{pub/msdos/djgpp/} on host omnigate.clarkson.edu.
FTP is the Internet file transfer protocol.

The file @file{makefile.pc} is a @code{Makefile} for @code{dmake}, a
make program for DOS@.  Rename it to @file{makefile} before building on
a PC@.
It was created by the @code{configure} script (@pxref{Building on Unix})
with the command line @code{configure --with-pc}.

@node Document Formatting, Manifest, Building on DOS, Installation
@section Formatting the Documentation

The file @file{sd_doc.txinfo} is in Texinfo format, which allows both
on-line information and a printed manual to be generated from the same
source document.  You can run it through @TeX{} to produce a printed
manual, or you can format it for use with @code{Info}, a hypertext
documentation reader.

Support for Texinfo-style documentation is distributed as part of
Emacs and as a stand-alone package, both available via anonymous ftp
from prep.ai.mit.edu and other GNU software archives.

Both the Emacs and Texinfo distributions contain @file{texinfo.tex}, the
macros required to print the document with @TeX{}@.  In Emacs, use
@w{@code{M-x texinfo-format-buffer}} to convert to Info, and use
@w{@code{M-x info}} to read the document.  In the Texinfo package,
@code{makeinfo} converts to Info, and @code{info} is the reader; both
are C programs.

You can use the following @code{make} commands to format the
documentation in different ways:

@table @kbd
@item make info
convert to Info format
@item make dvi
run through @TeX{}@.  Use this to make hardcopy.
@item make ps
run through @TeX{} and @file{dvips}.  Use this to make a PostScript file.
@item make html
convert to HTML format, for use on a World Wide Web server
@end table

The source distribution contains @file{sd_doc.PS}, a PostScript version,
and @file{sd_doc.txt}, a plain text version of the documentation.

@node Manifest,  , Document Formatting, Installation
@section Manifest

These are the files in the source distribution:

@table @t
@item README
Introduction from the manual
@item INSTALL
building and installing (also from the manual)
@item COPYING
GNU General Public License
@item Relnotes
What's new in this release
@item oldnotes
What was new in previous releases
@item Imakefile
generates a Makefile
@item configure
an alternate way to make a Makefile
@item configure.in
configure file source
@item Makefile.in
initial Makefile source used by configure
@item Sd.res
sample X11 user resource file
@item sd_calls.txt
the calls database source
@item db_doc.txt
describes the format of the calls database
@item sd_doc.txinfo
user documentation source
@item readme.txinfo
README file source
@item install.txinfo
INSTALL file source
@item gpl.txinfo
GNU General Public License source
@item sd_doc.PS
user documentation as PostScript
@item sd_doc.txt
user documentation as plain text
@item sdmain.c
the top level program
@item sdinit.c
call menu initialization
@item sdutil.c
general utilities, mostly for handling text
@item sdbasic.c
execution routines for basic (defined by array) calls
@item sdtables.c
many tables
@item sdctable.c
concept tables
@item sdtop.c
top level call execution
@item sdconcpt.c
implementation of many concepts
@item sdpreds.c
predicates
@item sd12.c
a few miscellaneous concepts
@item sd16.c
a few miscellaneous concepts
@item sdgetout.c
resolving, reconciling, etc.
@item sdmoves.c
execution routines for general calls
@item sdtand.c
tandem and as couples concepts
@item sdconc.c
concentric and related concepts
@item sdistort.c
distorted formation concepts
@item sdsi.c
system interface for Posix systems
@item sdui-x11.c
user interface for X Window System
@item sdui-tty.c
user interface for tty version
@item sdui-ttu.c
user interface support for tty version on Unix
@item sdui-tpc.c
user interface support for tty version on PCs
@item mkcalls.c
top level driver for calls database complier
@item dbcomp.c
guts of calls database complier
@item sd.h
included by all Sd source files
@item database.h
database structure definitions
@item paths.h
defaults for file names
@item sdui-ttu.h
definitions used by tty Unix support
@item sdmatch.c
completing reader for sdtty.
@item sdmatch.h
definitions for sdmatch.c
@item makefile.pc
makefile for use on a PC@.  Generated by @code{configure --with-pc}.
@item pcfiles.lnk
list of object files for dmake on a PC, which cannot handle long command
lines.
@end table
