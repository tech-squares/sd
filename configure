#!/bin/sh
# From configure.in Time-stamp: 93/11/30 00:19:42 gildea
# configure script for Sd (square dance caller's helper)
#
# options:
#    --with-warnings: of interest to developers only
#		(not implemented for all compilers)
#    --with-pc: generate makefile for use on IBM-PC running DOS
#		with dmake and djgpp C compiler
#
#!/bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated automatically using autoconf version 1.7 by gildea.
# Copyright (C) 1991, 1992, 1993 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# Usage: configure [--srcdir=DIR] [--host=HOST] [--gas] [--nfp]
#        [--prefix=PREFIX] [--exec-prefix=PREFIX] [--with-PACKAGE[=VALUE]]
# Ignores all args except --srcdir, --prefix, --exec-prefix, and
# --with-PACKAGE[=VALUE] unless this script has special code to handle it.

for arg
do
  # Handle --exec-prefix with a space before the argument.
  if test x$next_exec_prefix = xyes; then exec_prefix=$arg; next_exec_prefix=
  # Handle --host with a space before the argument.
  elif test x$next_host = xyes; then next_host=
  # Handle --prefix with a space before the argument.
  elif test x$next_prefix = xyes; then prefix=$arg; next_prefix=
  # Handle --srcdir with a space before the argument.
  elif test x$next_srcdir = xyes; then srcdir=$arg; next_srcdir=
  else
    case $arg in
     # For backward compatibility, recognize -exec-prefix and --exec_prefix.
     -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* | --exec=* | --exe=* | --ex=* | --e=*)
	exec_prefix=`echo $arg | sed 's/[-a-z_]*=//'` ;;
     -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- | --exec | --exe | --ex | --e)
	next_exec_prefix=yes ;;

     -gas | --gas | --ga | --g) ;;

     -host=* | --host=* | --hos=* | --ho=* | --h=*) ;;
     -host | --host | --hos | --ho | --h)
	next_host=yes ;;

     -nfp | --nfp | --nf) ;;

     -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
	prefix=`echo $arg | sed 's/[-a-z_]*=//'` ;;
     -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
	next_prefix=yes ;;

     -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=* | --s=*)
	srcdir=`echo $arg | sed 's/[-a-z_]*=//'` ;;
     -srcdir | --srcdir | --srcdi | --srcd | --src | --sr | --s)
	next_srcdir=yes ;;

     -with-* | --with-*)
       package=`echo $arg|sed -e 's/-*with-//' -e 's/=.*//'`
       # Reject names that aren't valid shell variable names.
       if test -n "`echo $package| sed 's/[-a-zA-Z0-9_]//g'`"; then
         echo "configure: $package: invalid package name" >&2; exit 1
       fi
       package=`echo $package| sed 's/-/_/g'`
       case "$arg" in
         *=*) val="`echo $arg|sed 's/[^=]*=//'`" ;;
         *) val=1 ;;
       esac
       eval "with_$package='$val'" ;;

     -v | -verbose | --verbose | --verbos | --verbo | --verb | --ver | --ve | --v)
       verbose=yes ;;

     *) ;;
    esac
  fi
done

trap 'rm -fr conftest* confdefs* core; exit 1' 1 3 15
trap 'rm -f confdefs*' 0

# NLS nuisances.
# These must not be set unconditionally because not all systems understand
# e.g. LANG=C (notably SCO).
if test "${LC_ALL+set}" = 'set' ; then LC_ALL=C; export LC_ALL; fi
if test "${LANG+set}"   = 'set' ; then LANG=C;   export LANG;   fi

rm -f conftest* confdefs.h
# AIX cpp loses on an empty file, so make sure it contains at least a newline.
echo > confdefs.h
compile='${CC-cc} $CFLAGS conftest.c -o conftest $LIBS >/dev/null 2>&1'

# A filename unique to this package, relative to the directory that
# configure is in, which we can look for to find out if srcdir is correct.
unique_file=sdmain.c

# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  srcdirdefaulted=yes
  # Try the directory containing this script, then `..'.
  prog=$0
  confdir=`echo $prog|sed 's%/[^/][^/]*$%%'`
  test "X$confdir" = "X$prog" && confdir=.
  srcdir=$confdir
  if test ! -r $srcdir/$unique_file; then
    srcdir=..
  fi
fi
if test ! -r $srcdir/$unique_file; then
  if test x$srcdirdefaulted = xyes; then
    echo "configure: Can not find sources in \`${confdir}' or \`..'." 1>&2
  else
    echo "configure: Can not find sources in \`${srcdir}'." 1>&2
  fi
  exit 1
fi
# Preserve a srcdir of `.' to avoid automounter screwups with pwd.
# But we can't avoid them for `..', to make subdirectories work.
case $srcdir in
  .|/*|~*) ;;
  *) srcdir=`cd $srcdir; pwd` ;; # Make relative path absolute.
esac


# Save the original args to write them into config.status later.
configure_args="$*"

CONFIG_FILES=Makefile

# See if this is a build with djgpp for a PC.

# check whether --with-pc was given
withval="$with_pc"
if test -n "$withval"; then
  
test -r makefile.pc.in && CONFIG_FILES=makefile.pc
echo "making ${CONFIG_FILES} for djgpp on a PC"
# ****** Beginning of PC section ******
SDTTY_OBJ="$(SDTTY_OBJ_PC)"
# DOS can't handle long command lines
SDTTY_OBJS="@pcfiles.lnk"
CC=gcc
CDEBUGFLAGS=-O
DEFS=
TTY_FLAGS=
TTY_LIBS=-lpc
X11_LIBS=
LN_S="ln -s"
STRIP="strip \$@"
AOUT2EXE="aout2exe \$@"
DEFAULT_TARGET=alltty
# ****** End of PC section ******

else
  
# ****** Beginning of Unix section ******
echo "making ${CONFIG_FILES} for Unix"
echo "checking for compiler type"

if test -z "$CC"; then
  # Extract the first word of `gcc', so it can be a program name with args.
  set dummy gcc; word=$2
  echo checking for $word
  IFS="${IFS= 	}"; saveifs="$IFS"; IFS="${IFS}:"
  for dir in $PATH; do
    test -z "$dir" && dir=.
    if test -f $dir/$word; then
      CC="gcc"
      break
    fi
  done
  IFS="$saveifs"
fi
test -z "$CC" && CC="cc"
test -n "$CC" && test -n "$verbose" && echo "	setting CC to $CC"

# Find out if we are using GNU C, under whatever name.
cat > conftest.c <<EOF
#ifdef __GNUC__
  yes
#endif
EOF
${CC-cc} -E conftest.c > conftest.out 2>&1
if egrep yes conftest.out >/dev/null 2>&1; then
  GCC=1 # For later tests.
fi
rm -f conftest*

echo checking how to run the C preprocessor
if test -z "$CPP"; then
  # This must be in double quotes, not single quotes, because CPP may get
  # substituted into the Makefile and ``${CC-cc}'' will simply confuse
  # make.  It must be expanded now.
  CPP="${CC-cc} -E"
  cat > conftest.c <<EOF
#include "confdefs.h"
#include <stdio.h>
Syntax Error
EOF
err=`eval "($CPP conftest.c >/dev/null) 2>&1"`
if test -z "$err"; then
  :
else
  rm -rf conftest*
  CPP=/lib/cpp
fi
rm -f conftest*
fi
test ".${verbose}" != "." && echo "	setting CPP to $CPP"

if test -n "$GCC"; then
  echo checking whether -traditional is needed
  pattern="Autoconf.*'x'"
  prog='#include <sgtty.h>
Autoconf TIOCGETP'
  cat > conftest.c <<EOF
#include "confdefs.h"
$prog
EOF
eval "$CPP conftest.c > conftest.out 2>&1"
if egrep "$pattern" conftest.out >/dev/null 2>&1; then
  rm -rf conftest*
  need_trad=1

fi
rm -f conftest*


  if test -z "$need_trad"; then
    prog='#include <termio.h>
Autoconf TCGETA'
    cat > conftest.c <<EOF
#include "confdefs.h"
$prog
EOF
eval "$CPP conftest.c > conftest.out 2>&1"
if egrep "$pattern" conftest.out >/dev/null 2>&1; then
  rm -rf conftest*
  need_trad=1

fi
rm -f conftest*

  fi
  test -n "$need_trad" && CC="$CC -traditional"
fi

CDEBUGFLAGS=-O

# If we didn't get gcc, look for other compilers.  Set CDEBUGFLAGS appropriately.
# In any case, deal with the "with-warnings" switch.

if test -n "$GCC"; then
  echo "using gcc"
  # check whether --with-warnings was given
withval="$with_warnings"
if test -n "$withval"; then
  CC="$CC -Wall -Wno-switch -Wno-implicit -Wno-parentheses -Wshadow -Wpointer-arith"
fi

else
  echo "not using gcc, looking for other compilers"
  echo "checking for HP compiler"
  cat > conftest.c <<EOF
#include "confdefs.h"
#ifdef __hpux
yes
#endif
EOF
eval "$CPP conftest.c > conftest.out 2>&1"
if egrep "yes" conftest.out >/dev/null 2>&1; then
  rm -rf conftest*
  CC="$CC -Aa -z +DA1.1 -D_AES_SOURCE"
  DEFS="+O3 +Obb750"
  # check whether --with-warnings was given
withval="$with_warnings"
if test -n "$withval"; then
  CC="$CC +w1"
fi

   CDEBUGFLAGS="$DEFS"
   DEFS=

fi
rm -f conftest*

fi

# Now CC should contain compiler invocation string, with switches.
# CDEBUGFLAGS should contain optimization/debug switches.

echo "got compiler type"

echo "checking whether -I$srcdir is needed"
cat > conftest.c <<EOF
#include "confdefs.h"
#include "sd.h"
EOF
err=`eval "($CPP conftest.c >/dev/null) 2>&1"`
if test -z "$err"; then
  :
else
  rm -rf conftest*
  DEFS="$DEFS -I$srcdir"
fi
rm -f conftest*

# Begin X11 investigation.

# If we find X, set shell vars x_includes and x_libraries to the paths.
no_x=true
echo checking for X include and library files with xmkmf
rm -fr conftestdir
if mkdir conftestdir; then
  cd conftestdir
  cat > Imakefile <<\EOF
acfindx:
	@echo "im_incroot=$(INCROOT); im_usrlibdir=$(USRLIBDIR); im_libdir=$(LIBDIR)"
EOF
  if (xmkmf) >/dev/null 2>/dev/null && test -f Makefile; then
    no_x=
    # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
    eval `make acfindx | grep -v make`
    # Open Windows xmkmf reportedly sets LIBDIR instead of USRLIBDIR.
    if test ! -f $im_usrlibdir/libX11.a && test -f $im_libdir/libX11.a; then
      im_usrlibdir=$im_libdir
    fi
    case "$im_incroot" in
	/usr/include) ;;
	*) x_includes="$im_incroot" ;;
    esac
    case "$im_usrlibdir" in
	/usr/lib | /lib) ;;
	*) x_libraries="$im_usrlibdir" ;;
    esac
  fi
  cd ..
  rm -fr conftestdir
fi

if test -z "$im_usrlibdir"; then
echo checking for X include and library files directly
cat > conftest.c <<EOF
#include "confdefs.h"
#include <X11/Intrinsic.h>
EOF
err=`eval "($CPP conftest.c >/dev/null) 2>&1"`
if test -z "$err"; then
  rm -rf conftest*
  no_x=

else
  rm -rf conftest*
  for dir in \
    /usr/local/include \
    /usr/unsupported/include \
    /usr/x386/include \
    /usr/local/x11r5/include \
    /usr/include/X11R5 \
    /usr/include/X11R4 \
    /usr/X11R5/include \
    /usr/X11/include \
    /usr/openwin/include \
    /usr/openwin/share/include \
    /usr/lpp/Xamples/include \
    ; \
  do
    if test -r $dir/X11/Intrinsic.h; then
      x_includes=$dir; no_x=
      break
    fi
  done
fi
rm -f conftest*

# Check for the libraries.  First see if replacing the `include' by
# `lib' works.
LIBS_save="${LIBS}"
LIBS="${LIBS} -lXt"
have_lib=""
echo checking for -lXt
cat > conftest.c <<EOF
#include "confdefs.h"

int main() { exit(0); }
int t() { main(); }
EOF
if eval $compile; then
  rm -rf conftest*
  have_lib="1"

fi
rm -f conftest*
LIBS="${LIBS_save}"
if test -n "${have_lib}"; then
   :; no_x=
else
   :; for dir in `echo "$x_includes" | sed s/include/lib/` \
  /usr/local/lib \
  /usr/unsupported/lib \
  /usr/x386/lib \
  /usr/local/x11r5/lib \
  /usr/lib/X11 \
  /usr/lib/X11R4 \
  /usr/X11R5/lib \
  /usr/X11/lib \
  /usr/openwin/lib \
  /usr/lpp/Xamples/lib \
  ; \
do
  for extension in a so sl; do
    if test -r $dir/libXt.$extension; then
      x_libraries=$dir; no_x=
      break 2
    fi
  done
done
fi

fi
if test -n "$verbose"; then
  test -n "$x_includes" && echo "	found X11 headers in $x_includes"
  test -n "$x_libraries" && echo "	found X11 libraries in $x_libraries"
fi
if test -n "$x_includes"; then
  X11_FLAGS="-I$x_includes"
fi
if test -n "$x_libraries"; then
  x_flags="-L$x_libraries"
fi
if test -n "$no_x"; then
  echo "note: cannot find X11 headers and libraries"
fi
LIBS_save="${LIBS}"
LIBS="${LIBS} -lsocket"
have_lib=""
echo checking for -lsocket
cat > conftest.c <<EOF
#include "confdefs.h"

int main() { exit(0); }
int t() { main(); }
EOF
if eval $compile; then
  rm -rf conftest*
  have_lib="1"

fi
rm -f conftest*
LIBS="${LIBS_save}"
if test -n "${have_lib}"; then
   :; LIBS="$LIBS -lsocket"
else
   :; 
fi

LIBS_save="${LIBS}"
LIBS="${LIBS} -lnsl"
have_lib=""
echo checking for -lnsl
cat > conftest.c <<EOF
#include "confdefs.h"

int main() { exit(0); }
int t() { main(); }
EOF
if eval $compile; then
  rm -rf conftest*
  have_lib="1"

fi
rm -f conftest*
LIBS="${LIBS_save}"
if test -n "${have_lib}"; then
   :; LIBS="$LIBS -lnsl"
else
   :; 
fi


X11_LIBS="$x_flags -lXaw -lXmu -lXt -lXext -lX11 $LIBS"

if test -n "$x_libraries"; then
    echo "checking whether -R$x_libraries is needed"
  LIBS="$X11_LIBS"
  cat > conftest.c <<EOF
#include "confdefs.h"
main(){XDisplayName(0); exit(0);}
EOF
eval $compile
if test -s conftest && (./conftest; exit) 2>/dev/null; then
  :
else
  # losing, try adding -R
    LIBS="$LIBS -R$x_libraries"
    cat > conftest.c <<EOF
#include "confdefs.h"
main(){XDisplayName(0); exit(0);}
    
EOF
eval $compile
if test -s conftest && (./conftest; exit) 2>/dev/null; then
  echo "your system requires the non-standard -R argument; my condolences"
     X11_LIBS="$X11_LIBS -R$x_libraries"

fi
rm -fr conftest*
fi
rm -fr conftest*
fi

# End of X11 investigation, begin curses investigation.

echo "checking for curses include files and libraries ..."

# We do NOT simply search for the existence of directories /usr/5include
# or /usr/5lib.  The standards (OSF and SysV) simply say that the curses
# service is supposed to work.  Naturally.  With the obvious include files,
# in the obvious places.  They don't say anything about requiring that the
# files /usr/5include/curses.h or /usr/5lib/libcurses.a *NOT* exist.  If we
# searched for the existence of those files, then a totally compliant system
# in which /usr/5include/curses.h was a link to /etc/passwd would fail.
# So we first test for conformance to the SysV or OSF standards.
# Only if that fails do we assume we are on a non-standards-compliant
# system (e.g. SunOS) and look for the other directories.  If that fails,
# we shut off curses completely.
#
# It happens that SunOS appears superficially to comply with the curses
# standard when the natural directories are used.  It has all the necessary
# files.  The problem is that, when sdtty is compiled for SunOS, we get
# these undefined globals:  __tty, __tty_ch, __echoit, and __rawmode.
# We assume they are requested by some functions that sdtty uses, but we
# don't know which ones.  So we apply a very rigorous and thorough test
# of the curses service, in which we check that every function that sdtty
# is known to use can be compiled and linked without error, including that
# insidious and revolting macro "getyx".
# That is why the test below is such a mess.

CFLAGS=""
LIBS="-lcurses"
curses_prog='
#include <curses.h>
#include <unistd.h>
int ly, lx;
initscr();            noecho();   cbreak();         scrollok(stdscr, LINES);
idlok(stdscr, TRUE);  endwin();   (void) getch();   clrtoeol();
clrtobot();           refresh();  move(1, 2);       addstr((char *) 0);
getstr((char *) 0);   addch(3);   beep();           getyx(stdscr, ly, lx);
'
echo checking for library in normal location
cat > conftest.c <<EOF
#include "confdefs.h"

int main() { exit(0); }
int t() { $curses_prog }
EOF
if eval $compile; then
  rm -rf conftest*
  got_curses_libs=1

fi
rm -f conftest*


if test -z "$got_curses_libs"; then
  CFLAGS="-I/usr/5include"
  LIBS="-L/usr/5lib -lcurses"
  echo checking for library in /usr/5lib
cat > conftest.c <<EOF
#include "confdefs.h"

int main() { exit(0); }
int t() { $curses_prog }
EOF
if eval $compile; then
  rm -rf conftest*
  got_curses_libs=1

fi
rm -f conftest*

fi

if test -z "$got_curses_libs"; then
  echo "********************************************************************"
  echo "* NOTE: Not able to build curses programs, disabling curses.       *"
  echo "* Sdtty will always behave as if the \"-no_cursor\" switch given.    *"
  echo "********************************************************************"
  CFLAGS="-DNO_CURSES"
  LIBS=""
fi


TTY_FLAGS="$CFLAGS"
TTY_LIBS="$LIBS"
SDTTY_OBJ="$(SDTTY_OBJ_UNIX)"
SDTTY_OBJS="$(SD_OBJS) $(SDTTY_OBJ)"

echo checking for ln -s
rm -f conftestdata
if ln -s X conftestdata 2>/dev/null
then
  rm -f conftestdata
  LN_S="ln -s"
else
  LN_S=ln
fi



if test -z "$no_x" -a -n "$DISPLAY"; then
  DEFAULT_TARGET=allx11
else
  DEFAULT_TARGET=alltty
fi

# ****** End of Unix section ******

fi


echo "compilation settings are as follows:"
echo "  compiler invocation (CC) = $CC"
echo "  general compilation flags (DEFS) = $DEFS"
echo "  extra flags for optimization/debug (CDEBUGFLAGS) = $CDEBUGFLAGS"
echo "  extra flags for compiling sdui-x11.c (X11_FLAGS) = $X11_FLAGS"
echo "  extra flags for compiling sdui-ttu.c (TTY_FLAGS) = $TTY_FLAGS"
echo "  flags for linking X11 (X11_LIBS) = $X11_LIBS"
echo "  flags for linking sdtty (TTY_LIBS) = $TTY_LIBS"

# Set default prefixes.
if test -n "$prefix"; then
  test -z "$exec_prefix" && exec_prefix='${prefix}'
  prsub="s%^prefix\\([ 	]*\\)=\\([ 	]*\\).*$%prefix\\1=\\2$prefix%"
fi
if test -n "$exec_prefix"; then
  prsub="$prsub
s%^exec_prefix\\([ 	]*\\)=\\([ 	]*\\).*$%exec_prefix\\1=\\2$exec_prefix%"
fi
# Quote sed substitution magic chars in DEFS.
cat >conftest.def <<EOF
$DEFS
EOF
escape_ampersand_and_backslash='s%[&\\]%\\&%g'
DEFS=`sed "$escape_ampersand_and_backslash" <conftest.def`
rm -f conftest.def
# Substitute for predefined variables.

trap 'rm -f config.status; exit 1' 1 3 15
echo creating config.status
rm -f config.status
cat > config.status <<EOF
#!/bin/sh
# Generated automatically by configure.
# Run this file to recreate the current configuration.
# This directory was configured as follows,
# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
#
# $0 $configure_args

for arg
do
  case "\$arg" in
    -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    echo running \${CONFIG_SHELL-/bin/sh} $0 $configure_args
    exec \${CONFIG_SHELL-/bin/sh} $0 $configure_args ;;
    *) echo "Usage: config.status --recheck" 2>&1; exit 1 ;;
  esac
done

trap 'rm -f Makefile; exit 1' 1 3 15
STRIP='$STRIP'
AOUT2EXE='$AOUT2EXE'
CC='$CC'
CPP='$CPP'
LN_S='$LN_S'
CONFIG_FILES='$CONFIG_FILES'
CDEBUGFLAGS='$CDEBUGFLAGS'
DEFS='$DEFS'
X11_FLAGS='$X11_FLAGS'
X11_LIBS='$X11_LIBS'
TTY_FLAGS='$TTY_FLAGS'
TTY_LIBS='$TTY_LIBS'
SDTTY_OBJ='$SDTTY_OBJ'
SDTTY_OBJS='$SDTTY_OBJS'
DEFAULT_TARGET='$DEFAULT_TARGET'
LIBS='$LIBS'
srcdir='$srcdir'
DEFS='$DEFS'
prefix='$prefix'
exec_prefix='$exec_prefix'
prsub='$prsub'
extrasub='$extrasub'
EOF
cat >> config.status <<\EOF

top_srcdir=$srcdir

CONFIG_FILES=${CONFIG_FILES-"Makefile"}
for file in .. ${CONFIG_FILES}; do if test "x$file" != x..; then
  srcdir=$top_srcdir
  # Remove last slash and all that follows it.  Not all systems have dirname.
  dir=`echo $file|sed 's%/[^/][^/]*$%%'`
  if test "$dir" != "$file"; then
    test "$top_srcdir" != . && srcdir=$top_srcdir/$dir
    test ! -d $dir && mkdir $dir
  fi
  echo creating $file
  rm -f $file
  echo "# Generated automatically from `echo $file|sed 's|.*/||'`.in by configure." > $file
  sed -e "
$prsub
$extrasub
s%@STRIP@%$STRIP%g
s%@AOUT2EXE@%$AOUT2EXE%g
s%@CC@%$CC%g
s%@CPP@%$CPP%g
s%@LN_S@%$LN_S%g
s%@CONFIG_FILES@%$CONFIG_FILES%g
s%@CDEBUGFLAGS@%$CDEBUGFLAGS%g
s%@DEFS@%$DEFS%g
s%@X11_FLAGS@%$X11_FLAGS%g
s%@X11_LIBS@%$X11_LIBS%g
s%@TTY_FLAGS@%$TTY_FLAGS%g
s%@TTY_LIBS@%$TTY_LIBS%g
s%@SDTTY_OBJ@%$SDTTY_OBJ%g
s%@SDTTY_OBJS@%$SDTTY_OBJS%g
s%@DEFAULT_TARGET@%$DEFAULT_TARGET%g
s%@LIBS@%$LIBS%g
s%@srcdir@%$srcdir%g
s%@DEFS@%$DEFS%
" $top_srcdir/${file}.in >> $file
fi; done


exit 0
EOF
chmod +x config.status
${CONFIG_SHELL-/bin/sh} config.status
