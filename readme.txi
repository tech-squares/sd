@c readme.txi  Time-stamp: <1997-10-14 17:19:42 gildea> -*-texinfo-*-
@c Included by sd_doc, also used to produce README.
@node Intro, Getting Started, Top, Top
@unnumbered Introduction

Sd is a square dance caller's helper.  The program assists you in
writing sequences
for Western square dancing by doing the checker pushing.  You tell the
program what call you want to call next, and it computes the resulting
setup and shows it to you.

@ifset full-manual
Sd is intended to be used to write challenge-level dances where the
sequences are often complex and the checker pushing tedious and
error-prone.  Most challenge callers write out the sequences they will
call before they get to the dance, unlike Mainstream callers, who
often invent the sequences on the fly from the stage.

@unnumberedsec What Sd Is Not

Sd knows nothing about timing, body flow, or esthetics.

This program is not appropriate for Traditional square dancing.  A good
Traditional square dance sequence requires, among other things, extremely
accurate control of timing and phrasing.  The program is not capable of
this.

Since the emphasis here is on checker pushing, you will find various
Mainstream staples missing, such as Circle Left, Grand Square, and
Do-Si-Do.  Since these calls are @dfn{zeros}, there is no
reason to have them in a checker-pushing program.  However, if you
wish to write sequences containing calls such as these, you can use the
@code{insert a comment} command to write them into the sequence.

In short, if you are writing a Traditional or Mainstream dance,
you may find that this program is not for you.

It is most emphatically not the goal of Sd to present a polished
graphical display of the dancers, or to show animation.  The goal
is to write sequences so that you can create pleasing animation among
live people.  If you want to enjoy the esthetic visual patterns
created by square dance choreography, we recommend that you turn
off your computer and go to a dance.

The use of this program is not a good way to learn to call or to improve
your calling or dancing skills.  In fact, reliance on a computer program
to write material could easily make you a worse caller, or interfere
with your attempts to improve your calling skills.

The knowledge of calls and concepts that this program can provide is
only a tiny part what you need to learn in order to be a good caller
or dancer.  To call successfully, you need to master many skills,
such as timing, flow, judging difficulty, floor interaction, and choosing
precisely the right words to say.  This last skill becomes increasingly
important at higher levels.  Subtle differences in the words you choose,
and their timing and inflection, can have a tremendous influence on the
success of the dancers.  Sd attempts to print the correct words in all
cases, but you will only succeed if you have a deep understanding of
what the words mean and how they should be delivered.  That understanding
can only be obtained through a great deal of experience calling at that level.

If you do not have a good understanding of a call or concept, such that
you could explain it to a dancer after the tip is over, you should not use it.
Do not rely on Sd to provide the necessary insight into challenge dancing.

For beginning callers in particular, the best thing to do
is to receive instruction from a qualified teacher or coach, and to practice.

We recognize that people sometimes have to learn a level in a tape group without
benefit of any human expertise at that level, and that such people may have
no choice but to rely on a computer program as one of their sources of
information.  This is an undesirable situation, and we believe that computer
programs should not be used as references except in emergencies.  There is an
enormous body of knowledge about the accepted usage of various calls and concepts.
That body of knowledge is generally possessed by all competent dancers and callers
at a given level.  No computer program can possibly possess that knowledge.
In particular, computer programs should not be used for resolving controversial
issues.

This is not to say that computers have no place in the education and training
of callers.  A number of caller training programs have been written that
may help you develop such skills as formation management and sight resolving.
Sd is not suitable for this.

@unnumberedsec Quality and Correctness

Quality, correctness, and reliability are fundamental and extremely important
design objectives of Sd.  Before any version is released, it passes
very rigorous diagnostic tests.  These tests include verification of large amounts
of C4 material from recent National Advanced and Challenge Conventions, and
other C4 weekends, with particular emphasis on material written by competing programs.
The elusive but ever-sought-after goal is to make a program that

@itemize @bullet
@item
never makes mistakes,
@item
is able to write virtually all of the non-bogus material called
by the top challenge callers, whatever computer program they may have
used, and
@item
is developed and tested carefully, so users can be assured that this
ability will be maintained in all future releases.
@end itemize

@unnumberedsec Authenticity of Calls and Concepts

We have endeavored to use the current Callerlab lists and definitions as
the source for call and concept names and definitions wherever possible.
Where this is not possible, either because Callerlab does not publish
lists or definitions at all levels, or because a definition is unclear
in some area, we have used other well-respected encyclopedias, along with our
best attempts to make things clear and sensible.  Particularly at extremely
high challenge levels, where there are no standardization bodies to rein in
callers' tendencies to change the definitions or usage of calls, concepts,
and fundamental assumptions, it is not always possible to do this to
everyone's satisfaction.

Spelling variations that would be insignificant in normal calling become
a serious problem for computer programs.  We have attempted to use the
spelling in official lists where possible, but sometimes even these
lists are careless.  In such cases, we have attempted to correct the errors
where possible, using a variety of sources.  Priority is given to those
sources that have shown the greatest care in their editing.

@unnumberedsec Deviations from Official Lists

It is a known fact that challenge callers routinely call various ``popular''
calls that are not on the official or semi-official lists.  In an attempt to
allow this, while maintaining the appearance of strict compliance with
the lists, Sd has two special levels @code{c3x} and @code{c4x}.  These contain
the calls that are currently believed to be called at C3 and C4 but are
not yet on the semi-official C3 list or the various informal C4 compilations
of ``commonly used'' calls.

It is generally @emph{not necessary} to run the program at either of these
levels.  When you run at C3, C3X calls may be used.
When you run at C4, C4X calls may be used.  Whenever such a call is
used, a warning is printed.  (If you explicitly run the program at
C3X or C4X, you may use the calls without getting a warning.)

@unnumberedsec Judgement, Controversy, and Warning Messages

Not all callers exercise good judgement in their calling, and occasionally
some controversial, or even illegal, things are called.  It is not possible
for a computer program to enforce good judgement or good taste.  Sd
nevertheless sometimes prints warning messages of various types to alert
less-experienced callers that something might be unusually difficult or
controversial, or might violate some definition or some commonly accepted notion.

@noindent These warning messages are intended for callers less competent than you.
Ignore them.

You can prevent the program from displaying or printing these warning messages
by giving the @code{toggle nowarn mode} command.  This turns on (or turns
off if it was already on) the ``no warnings'' mode.  You can also start the
program with a command-line switch ``-no_warnings'', or place a line
with just the word ``no_warnings'' (with no leading hyphen) in the
``options'' section of the @file{sd.ini} initialization file.

@unnumberedsec Variations of the Program
@end ifset

Several user interfaces are available.  They come in two general types,
and the program name is different for these types.

Sd is the name of the program that uses menus and a @dfn{graphical user
interface}.  Calls are selected by clicking with the mouse on the chosen
menu item.  The principal version of Sd runs on Unix-like systems with
the X Window System interface.  Sd is also available for Domain/OS on
Apollo systems.  It is not yet available for PC compatibles.

Sdtty is the name of the program that uses a character-oriented keyboard
interface.  Calls are selected by typing their names.
Sdtty runs on
Unix-like systems and under DOS, Windows 3.1, Windows 95, and Windows NT on PC
compatibles.  PC users may take comfort from the fact that most serious
callers prefer Sdtty rather than Sd.

@menu
* Documentation::               Documentation
* Getting Sd or Sdtty::         Getting Sd or Sdtty
* A Few Technical Details::     A Few Technical Details
* Installing Sdtty on a PC::    Installing Sdtty on a PC
* Making Sdtty Start Under Windows:: Making Sdtty Start Under Windows
* Licensing Terms::             Licensing Terms
* Author Contact::              How to Contact the Authors
* Acknowledgements::            Acknowledgements
@end menu

@node Documentation, Getting Sd or Sdtty,  , Intro
@unnumberedsec Documentation

If you received the program in the form of source files,
the file @file{INSTALL} contains instructions for building and
installing Sd and for formatting and printing its documentation.
If you have received the program in pre-built form, you shouldn't
need to read it.

The files @file{sd_doc.txt} and @file{sd_doc.ps} are this manual,
in plain text and formatted form, respectively.  The file
@file{db_doc.txt} gives internal information on the database format,
useful only to people editing the calls database.

See the file @file{relnotes.txt} for information about what is new in
this release.

Printed copies of the manual are available from the authors, or may be
printed from the file @file{sd_doc.ps}.

If you are on the Internet, you can read Sd documentation using the
World Wide Web.  Give the locator
@ifclear html
@t{http://www.gildea.com/sd/}
@end ifclear
@ifset html
@t{<A HREF="http://www.gildea.com/sd/">http://www.gildea.com/sd/</A>}
@end ifset
to your WWW browser program.

@node Getting Sd or Sdtty, A Few Technical Details, Documentation, Intro
@unnumberedsec Getting Sd or Sdtty

You can obtain Sdtty for DOS on PC-compatible computers,
on a 3.5-inch HD disk, with printed documentation.
The price is $4 (price valid for 1997).
@ifset full-manual
@xref{Author Contact}.
@end ifset
If you want a different format instead, please say so.

Sd and Sdtty are also available via FTP from the directory
@file{sd/} on host ftp.gildea.com.
FTP is the Internet file transfer protocol.

The file
@ifclear html
@file{install.exe}
@end ifclear
@ifset html
@file{<A HREF="ftp://ftp.gildea.com/sd/install.exe">install.exe</A>}
@end ifset
is the Sdtty program for installation on PC's.  It is the same file as
@samp{INSTALL.EXE} that is furnished on a floppy disk.

Pre-built versions for various Unix-style systems are available in the same
@ifclear html
FTP directory;
@end ifclear
@ifset html
<A HREF="ftp://ftp.gildea.com/sd/">FTP directory</A>;
@end ifset
check to see if there is a binary for your platform.
The file
@ifclear html
@file{Manifest}
@end ifclear
@ifset html
@file{<A HREF="ftp://ftp.gildea.com/sd/Manifest">Manifest</A>}
@end ifset
contains a description of all the files in this directory.

You must transfer the files in FTP's binary mode.

You can download the program from
@ifclear html
@t{http://www.gildea.com/sd/}
@end ifclear
@ifset html
@t{<A HREF="http://www.gildea.com/sd/">http://www.gildea.com/sd/</A>}
@end ifset
on the World Wide Web.

If your mailer can interpret MIME messages, we can also send you Sd
by email.  MIME is a draft Internet standard for structured mail, and
it includes support for mailing large binary files.

@node A Few Technical Details, Installing Sdtty on a PC, Getting Sd or Sdtty, Intro
@unnumberedsec A Few Technical Details

On a PC, @code{Sdtty} uses the @code{DPMI} memory manager.  If necessary, it uses its own
copy of @code{DPMI}@.  It can be started under either standalone DOS or the
@samp{MS-DOS Prompt} under Windows.  It can also be started directly as a Windows
application, even though it does not use the mouse while running.

You need a 386 or higher processor and 2Mb of memory.
A hard disk is recommended.  There
should be at least 175 kilobytes of memory free in the first 640Kb.
The authors have not actually tried it on a system this small, and we
would be interested in your experiences.

@code{Sd} and @code{Sdtty} are believed to be
insensitive to slight inaccuracies in floating-point division.
It should operate correctly with early Pentium chips.

The program is mostly "Year 2000 Compliant", but some care will be
needed.  File names created with the special names @code{*} and @code{+}
contain only the last two digits of the year.  We therefore recommend that you
delete old files at least every 75 years or so.

The date printed at the top of each sequence contains the full
4-digit year, so there should be little danger of calling a 100-year-old
card without realizing it.  Callers are nevertheless urged to be careful,
since some dancers have extraordinarily long memories.

@node Installing Sdtty on a PC, Making Sdtty Start Under Windows, A Few Technical Details, Intro
@unnumberedsec Installing Sdtty on a PC

To install the program from a floppy disk to a PC-compatible, you must be
running in DOS@.  There are two ways to go from Windows to DOS@.  The simplest
is to click the @code{MS-DOS prompt} icon.  In Windows 3.1 or Windows NT, this is typically
in the @code{main} program group.  In Windows 95, this is typically in the
@code{Programs} sub-menu of the @code{Start} menu.  To return to Windows after
starting DOS in this way, just type @code{exit} to DOS.

The other way to start DOS is to exit from Windows.  To exit from Windows
3.1, double-click the button in the upper left corner of the Program Manager
window.  To exit from Windows 95, select @code{Shut Down} in the @code{Start} menu
and select @code{Restart the computer in MS-DOS mode}.  To return to Windows
3.1, type the @code{win} command to DOS@.  To return to Windows 95, just type
@code{exit} to DOS.

Once in DOS do this if you are installing Sdtty for the first time:

@example
MD C:\SD
@end example

If you are upgrading to a new version of Sdtty, you don't need to issue
the above command.

Then insert the floppy disk and do this:

@example
CD C:\SD
A:INSTALL
@end example

If you are upgrading to a new version, it will ask whether it is OK to
overwrite existing files.  Type ``Y'' in each case, assuming that you want
to replace the existing version.  It will not damage or delete any sequence
transcript files or initialization files.

Once the installation is complete, you can run Sdtty under DOS or Windows.
To run it from DOS, type

@example
CD C:\SD
sdtty
@end example

You can also start Sdtty directly from Windows.  The best way is to carry out the
steps in the next section to set up a ``shortcut'' icon.  Sdtty can also be started
by locating the file @file{C:\SD\SDTTY.PIF} in the File Manager or Windows 95 Explorer,
and double-clicking it.

You may safely delete any documentation files from your hard disk after installing
the program.

@node Making Sdtty Start Under Windows, Licensing Terms, Installing Sdtty on a PC, Intro
@unnumberedsec Making Sdtty Start Under Windows

You can arrange for Windows to start Sdtty directly, from a ``shortcut'' icon.
You only need to do the following steps once.
After you have done them, upgrades to new versions of Sdtty will work
without repeating this.

This assumes that Sdtty was installed, as per the instructions above,
in the directory @code{C:\SD}@.  If you installed it elsewhere, you must
use the @code{Properties} command of the explorer (in Windows 95) or
the PIF editor (in Windows 3.1 or Windows NT) to modify the Command Line or Program Filename
given in @code{sdtty.pif}.

@unnumberedsubsec Under Windows 95
Click @code{Start}.  Choose @code{Settings} and then @code{Taskbar}.  Click on
the tab called @code{Start Menu Programs}.  Click on @code{Add}.  Type the
file name @code{c:\sd\sdtty.pif}, and then click @code{Next>}.  When it says
@code{Select folder to place shortcut in}, select the desired location, for
example, @code{Desktop}, @code{Start Menu}, or @code{Programs}, and then click
@code{Next>}.
When it says @code{Select a name}, leave it as @code{SDTTY} and
click @code{Finish}.  Sdtty will now be in the selected location.

@unnumberedsubsec Under Windows 3.1 or Windows NT
From the Program Manager, double-click the program group you want to place it in,
for example, @code{Accessories}.  In the Toolbar of the Program Manager, click
@code{File}.  Then click @code{New}.  Select @code{Program Item}, and click @code{OK}@.
Type @code{C:\SD\SDTTY.PIF} as the @code{Program Filename} or @code{Command Line}.
Type @code{SD} (or whatever you wish) as the @code{Description}.
Choose an icon if you wish.  Then click @code{OK}.

@node Licensing Terms, Author Contact, Making Sdtty Start Under Windows, Intro
@unnumberedsec Licensing Terms

Sd and Sdtty are ``free'' programs.  In short, this means that it is
perfectly legal and ethical to copy and redistribute the program and
documentation.  For example, you may obtain the program by having a
friend copy the disk and manual for you.  (Or just copy the disk and
print your own manual from the file that is on the disk.)

Sd and Sdtty are sometimes also distributed in source form.  When so
distributed, they are licensed under the GNU General Public License,
which is in the file @file{COPYING}@.  The terms of this license,
for distribution of source files or programs made from modified
source files, are very strict.  Programs constructed from modified source
files may never be duplicated or redistributed by anyone, even in executable
form, without obeying the conditions of the license.
Read the license carefully.

Note in particular that any modified program based on Sd or Sdtty must
obey the licensing terms every time it is redistributed by anyone.
This requires redistribution of all of the source files, or otherwise
complying with section 3 of the license.

@ifset full-manual
This document
@end ifset
@ifclear full-manual
The reference manual
@end ifclear
is distributed in both formatted and plain-text form, in the
files @file{sd_doc.ps} and @file{sd_doc.txt}, respectively.  Some other
documents are also distributed with the program.  Permission is
given to distribute verbatim copies of these documents, either by
photocopier or by computer,
but modification of them is forbidden by copyright law.

@node Author Contact, Acknowledgements, Licensing Terms, Intro
@unnumberedsec How to Contact the Authors

The Internet mailing list @code{sd}, hosted at @code{lists.best.com}, is for
discussion of Sd
and announcements of new versions.  Send email to
@ifclear html
@code{sd-request@@lists.best.com}
@end ifclear
@ifset html
@code{<A HREF="mailto:sd-request@@lists.best.com">sd-request@@lists.best.com</A>}
@end ifset
to be added.

Please send any praise, bug reports, or other comments on Sd
to the authors at the addresses given below.
Be sure to include the version number.

@c don't use mailto URL's to try to cut down on spam
@display
William Ackerman
wba@@apollo.hp.com

@ifclear html
Stephen Gildea
@end ifclear
@ifset html
<A HREF="http://www.gildea.com/stephen/">Stephen Gildea</A>
@end ifset
stephen@@gildea.com
@end display

If you do not have access to electronic mail, write to

@display
@group
Bill Ackerman
100 Parlmont Park
North Billerica MA 01862-2722
@end group
@end display

@ifset full-manual
@node Acknowledgements, , Author Contact, Intro
@unnumberedsec Acknowledgements

Thanks to Kathy Godfrey, Sue Curtis, Chris Stacy, and Lynette Bellini
for their help, encouragement, suggestions, contributions of calls,
feedback, testing, and many other contributions.

The non-windowed interface for @code{sdtty} (@pxref{Terminal Interface})
was written by Alan Snyder.

We received helpful feedback and testing from Robert French, Judy
Anderson, Bill van Melle, Lois Lew, Ron Nicholson, Dave Decot,
Kristin Jensen, Larry Dunn, and Nick Martellacci.
@end ifset
