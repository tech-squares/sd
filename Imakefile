/*
 * Imakefile for Sd (square dance caller's helper)
 * Time-stamp: <92/11/22 21:53:36 gildea>
 *
 * Run "xmkmf" to generate a Makefile from this description.
 * Then run "make" to build the Sd system.
 */

SD_SRCS = sdmain.c sdinit.c sdutil.c sdbasic.c sdtables.c \
          sdtop.c sd.c sdpreds.c sd12.c sd16.c \
          sdgetout.c sdmoves.c sdtand.c sdconc.c sdistort.c \
          sdsi.c sdui-x11.c

SD_OBJS = sdmain.o sdinit.o sdutil.o sdbasic.o sdtables.o \
          sdtop.o sd.o sdpreds.o sd12.o sd16.o \
          sdgetout.o sdmoves.o sdtand.o sdconc.o sdistort.o \
          sdsi.o sdui-x11.o

SRCS2 = mkcalls.c
OBJS2 = mkcalls.o

SRCS = $(SD_SRCS) $(SRCS2)
OBJS = $(SD_OBJS) $(OBJS2)

AllTarget(sd mkcalls sd_calls.dat)

NormalProgramTarget(sd, $(SD_OBJS), XawClientDepLibs, XawClientLibs, /**/)

NormalProgramTarget(mkcalls, $(OBJS2), /**/, /**/, /**/)

sd_calls.dat: sd_calls.txt mkcalls
	./mkcalls

clean::
	$(RM) sd_calls.dat sd.tar


DISTFILES = README Relnotes relnotes.archive Imakefile Makefile Sd.res \
            sd_calls.txt COPYING database.doc sd_doc.txinfo
DISTSRCS = sd.h database.h paths.h

distrib:
	tar cvf sd.tar $(DISTFILES) $(SD_SRCS) $(DISTSRCS) $(SRCS2)

DependTarget()			
